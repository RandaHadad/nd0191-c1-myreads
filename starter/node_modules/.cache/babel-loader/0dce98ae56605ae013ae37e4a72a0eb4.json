{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\BookList.jsx\";\nimport React from \"react\";\nimport EachBook from \"./EachBook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookList({\n  booklist,\n  value,\n  addBook\n}) {\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\n  let read = JSON.parse(localStorage.getItem(\"read\"));\n\n  const getNoneBookCategory = () => {\n    for (let i = 0; i < currentlyReading.lenght; i++) {\n      booklist.filter(e => e.id !== currentlyReading[i].id);\n    }\n  };\n\n  return !booklist ? /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"spinner-border\",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"sr-only\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: booklist.map(book => {\n      return currentlyReading.map(e => {\n        if (book.id == e.id) return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          value: \"currentlyReading\",\n          addBook: addBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/BookList.jsx"],"names":["React","EachBook","BookList","booklist","value","addBook","currentlyReading","JSON","parse","localStorage","getItem","wantToRead","read","getNoneBookCategory","i","lenght","filter","e","id","map","book"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAlB,EAAgD;AAC7D,MAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAAvB;AACA,MAAIC,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;AACA,MAAIE,IAAI,GAAGL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;;AAEA,QAAMG,mBAAmB,GAAG,MAAM;AAEhC,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACR,gBAAgB,CAACS,MAAjC,EAAwCD,CAAC,EAAzC,EAA4C;AAC1CX,MAAAA,QAAQ,CAACa,MAAT,CAAiBC,CAAD,IAAKA,CAAC,CAACC,EAAF,KAASZ,gBAAgB,CAACQ,CAAD,CAAhB,CAAoBI,EAAlD;AACD;AACF,GALD;;AAOA,SAAO,CAACf,QAAD,gBACL;AAAK,IAAA,KAAK,EAAC,gBAAX;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA,2BACE;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACGA,QAAQ,CAACgB,GAAT,CAAcC,IAAD,IAAU;AACtB,aAAOd,gBAAgB,CAACa,GAAjB,CAAsBF,CAAD,IAAO;AACjC,YAAIG,IAAI,CAACF,EAAL,IAAWD,CAAC,CAACC,EAAjB,EACE,oBACE,QAAC,QAAD;AAEE,UAAA,IAAI,EAAEE,IAFR;AAGE,UAAA,KAAK,EAAC,kBAHR;AAIE,UAAA,OAAO,EAAEf;AAJX,WACOe,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQH,OAVM,CAAP;AAWD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UALF;AAqBD;KAjCuBhB,Q","sourcesContent":["import React from \"react\";\r\nimport EachBook from \"./EachBook\";\r\n\r\nexport default function BookList({ booklist, value, addBook }) {\r\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\r\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\r\n  let read = JSON.parse(localStorage.getItem(\"read\"));\r\n\r\n  const getNoneBookCategory = () => {\r\n    \r\n    for(let i =0; i<currentlyReading.lenght;i++){\r\n      booklist.filter((e)=>e.id !== currentlyReading[i].id)\r\n    }\r\n  };\r\n\r\n  return !booklist ? (\r\n    <div class='spinner-border' role='status'>\r\n      <span class='sr-only'>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <ol className='books-grid'>\r\n      {booklist.map((book) => {\r\n        return currentlyReading.map((e) => {\r\n          if (book.id == e.id)\r\n            return (\r\n              <EachBook\r\n                key={book.id}\r\n                book={book}\r\n                value='currentlyReading'\r\n                addBook={addBook}\r\n              />\r\n            );\r\n        });\r\n      })}\r\n    </ol>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}