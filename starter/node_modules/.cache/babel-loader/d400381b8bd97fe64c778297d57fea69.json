{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Screens\\\\HomeScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BookApi from \"../BooksAPI\";\nimport BookShelf from \"../Component/BookShelf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  const [currentRead, setcurrentRead] = useState(JSON.parse(localStorage.getItem(\"currentlyReading\")));\n  const [wantRead, setwantRead] = useState(JSON.parse(localStorage.getItem(\"wantToRead\")));\n  const [read, setRead] = useState(JSON.parse(localStorage.getItem(\"read\")));\n  React.useEffect(() => {\n    getBooks();\n  }, []); //Get All Books From API\n\n  const getBooks = async () => {\n    const res = await BookApi.getAll();\n    console.log(res[0].shelf);\n    console.log(res[0].title);\n    setSearch(res);\n  };\n\n  const addBook = (value, books) => {\n    switch (value) {\n      case \"currentlyReading\":\n        setcurrentRead(books);\n        break;\n\n      case \"wantToRead\":\n        setwantRead(books);\n        break;\n\n      case \"read\":\n        setRead(books);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: [/*#__PURE__*/_jsxDEV(BookShelf, {\n          title: \"Currently Reading\",\n          booklist: currentRead,\n          addBook: addBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n          title: \"Want Read\",\n          booklist: wantRead,\n          addBook: addBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n          title: \"Read\",\n          booklist: read,\n          addBook: addBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeScreen, \"O4TcCeQ4ZazVmqjwcI9W49/jEy4=\");\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Screens/HomeScreen.jsx"],"names":["React","useState","Link","BookApi","BookShelf","HomeScreen","currentRead","setcurrentRead","JSON","parse","localStorage","getItem","wantRead","setwantRead","read","setRead","useEffect","getBooks","res","getAll","console","log","shelf","title","setSearch","addBook","value","books"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAC5CO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAD4C,CAA9C;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CACtCO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CADsC,CAAxC;AAGA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAD,CAAhC;AAEAX,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ;AACT,GAFD,EAEG,EAFH,EATmC,CAanC;;AACA,QAAMA,QAAQ,GAAG,YAAY;AAC3B,UAAMC,GAAG,GAAG,MAAMf,OAAO,CAACgB,MAAR,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAAC,CAAD,CAAH,CAAOI,KAAnB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAAC,CAAD,CAAH,CAAOK,KAAnB;AACAC,IAAAA,SAAS,CAACN,GAAD,CAAT;AACD,GALD;;AAOA,QAAMO,OAAO,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChC,YAAQD,KAAR;AACE,WAAK,kBAAL;AACEnB,QAAAA,cAAc,CAACoB,KAAD,CAAd;AACA;;AACF,WAAK,YAAL;AACEd,QAAAA,WAAW,CAACc,KAAD,CAAX;AACA;;AACF,WAAK,MAAL;AACEZ,QAAAA,OAAO,CAACY,KAAD,CAAP;AACA;;AACF;AACE;AAXJ;AAaD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAE,mBADT;AAEE,UAAA,QAAQ,EAAErB,WAFZ;AAGE,UAAA,OAAO,EAAEmB;AAHX;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,SAAD;AACE,UAAA,KAAK,EAAE,WADT;AAEE,UAAA,QAAQ,EAAEb,QAFZ;AAGE,UAAA,OAAO,EAAEa;AAHX;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,MAAlB;AAA0B,UAAA,QAAQ,EAAEX,IAApC;AAA0C,UAAA,OAAO,EAAEW;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAmBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAhEuBpB,U;;KAAAA,U","sourcesContent":["import { React, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as BookApi from \"../BooksAPI\";\r\nimport BookShelf from \"../Component/BookShelf\";\r\n\r\nexport default function HomeScreen() {\r\n  const [currentRead, setcurrentRead] = useState(\r\n    JSON.parse(localStorage.getItem(\"currentlyReading\"))\r\n  );\r\n  const [wantRead, setwantRead] = useState(\r\n    JSON.parse(localStorage.getItem(\"wantToRead\"))\r\n  );\r\n  const [read, setRead] = useState(JSON.parse(localStorage.getItem(\"read\")));\r\n\r\n  React.useEffect(() => {\r\n    getBooks();\r\n  }, []);\r\n\r\n  //Get All Books From API\r\n  const getBooks = async () => {\r\n    const res = await BookApi.getAll();\r\n    console.log(res[0].shelf);\r\n    console.log(res[0].title);\r\n    setSearch(res);\r\n  };\r\n\r\n  const addBook = (value, books) => {\r\n    switch (value) {\r\n      case \"currentlyReading\":\r\n        setcurrentRead(books);\r\n        break;\r\n      case \"wantToRead\":\r\n        setwantRead(books);\r\n        break;\r\n      case \"read\":\r\n        setRead(books);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='app'>\r\n      <div className='list-books'>\r\n        <div className='list-books-title'>\r\n          <h1>MyReads</h1>\r\n        </div>\r\n\r\n        <div className='list-books-content'>\r\n          <BookShelf\r\n            title={\"Currently Reading\"}\r\n            booklist={currentRead}\r\n            addBook={addBook}\r\n          />\r\n          <BookShelf\r\n            title={\"Want Read\"}\r\n            booklist={wantRead}\r\n            addBook={addBook}\r\n          />\r\n          <BookShelf title={\"Read\"} booklist={read} addBook={addBook} />\r\n        </div>\r\n\r\n        <div className='open-search'>\r\n          <Link to='/search'>Add a book</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}