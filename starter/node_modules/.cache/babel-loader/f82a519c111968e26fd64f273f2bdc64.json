{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\BookList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport EachBook from \"./EachBook\";\nimport { update } from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookList({\n  booklist,\n  addBook\n}) {\n  _s();\n\n  const [bookshelf, setBooshelf] = React.useState(\"none\");\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\n  let read = JSON.parse(localStorage.getItem(\"read\"));\n\n  const updateBook = val => {\n    setBooshelf(val);\n  };\n\n  return booklist == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) : booklist.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12 empty-cart-cls text-center\",\n          children: addBook ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"No Book Yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/1178/1178479.png\",\n              width: \"130\",\n              height: \"130\",\n              className: \"img-fluid mb-4 mr-3\",\n              alt: \"Not Found img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"No Book Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"btn btn-success cart-btn-transform m-3\",\n              children: \"Back To My Shelf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: booklist.map(book => {\n      if (currentlyReading.findIndex(e => e.id === book.id) > -1) {\n        setBooshelf(\"currentlyReading\");\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          bookshelf: bookshelf,\n          addBook: addBook,\n          updateBook: updateBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      } else if (wantToRead.findIndex(e => e.id === book.id) > -1) {\n        setBooshelf(\"wantToRead\");\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          bookshelf: bookshelf,\n          addBook: addBook,\n          updateBook: updateBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      } else if (read.findIndex(e => e.id === book.id) > -1) {\n        setBooshelf(\"read\");\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          bookshelf: bookshelf,\n          addBook: addBook,\n          updateBook: updateBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          addBook: addBook,\n          updateBook: updateBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 18\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookList, \"eBjxLxy33XYWm7oqHe9enrLThLI=\");\n\n_c = BookList;\nBookList.propTypes = {\n  booklist: PropTypes.array.isRequired,\n  addBook: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/BookList.jsx"],"names":["React","Link","PropTypes","EachBook","update","BookList","booklist","addBook","bookshelf","setBooshelf","useState","currentlyReading","JSON","parse","localStorage","getItem","wantToRead","read","updateBook","val","length","map","book","findIndex","e","id","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport EachBook from \"./EachBook\";\r\nimport { update } from \"../BooksAPI\";\r\n\r\nexport default function BookList({ booklist, addBook }) {\r\n  const [bookshelf, setBooshelf] = React.useState(\"none\");\r\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\r\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\r\n  let read = JSON.parse(localStorage.getItem(\"read\"));\r\n\r\n  const updateBook =(val)=>{\r\n    setBooshelf(val)\r\n  }\r\n  return booklist == null ? (\r\n    <div className='d-flex justify-content-center'>\r\n      <div className='spinner-border' role='status'>\r\n        <span className='sr-only'></span>\r\n      </div>\r\n    </div>\r\n  ) : booklist.length === 0 ? (\r\n    <div className='container-fluid d-flex justify-content-center'>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <div className='col-sm-12 empty-cart-cls text-center'>\r\n            {addBook ? (\r\n              <h5>No Book Yet</h5>\r\n            ) : (\r\n              <div className='m-4'>\r\n                <img\r\n                  src='https://cdn-icons-png.flaticon.com/512/1178/1178479.png'\r\n                  width='130'\r\n                  height='130'\r\n                  className='img-fluid mb-4 mr-3'\r\n                  alt='Not Found img'\r\n                />\r\n                <h3>\r\n                  <strong>No Book Found</strong>\r\n                </h3>\r\n                <Link to='/' className='btn btn-success cart-btn-transform m-3'>\r\n                  Back To My Shelf\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <ol className='books-grid'>\r\n      {booklist.map((book) => {\r\n        if (currentlyReading.findIndex((e) => e.id === book.id) > -1) {\r\n          setBooshelf(\"currentlyReading\");\r\n          return (\r\n            <EachBook\r\n              key={book.id}\r\n              book={book}\r\n              bookshelf={bookshelf}\r\n              addBook={addBook}\r\n              updateBook={updateBook}\r\n            />\r\n          );\r\n        } else if (wantToRead.findIndex((e) => e.id === book.id) > -1) {\r\n          setBooshelf(\"wantToRead\");\r\n\r\n          return (\r\n            <EachBook\r\n              key={book.id}\r\n              book={book}\r\n              bookshelf={bookshelf}\r\n              addBook={addBook}\r\n              updateBook={updateBook}\r\n            />\r\n          );\r\n        } else if (read.findIndex((e) => e.id === book.id) > -1) {\r\n          setBooshelf(\"read\");\r\n          return (\r\n            <EachBook\r\n              key={book.id}\r\n              book={book}\r\n              bookshelf={bookshelf}\r\n              addBook={addBook}\r\n              updateBook={updateBook}\r\n            />\r\n          );\r\n        } else {\r\n          return <EachBook key={book.id} book={book} addBook={addBook} updateBook={updateBook}/>;\r\n        }\r\n      })}\r\n    </ol>\r\n  );\r\n}\r\nBookList.propTypes = {\r\n  booklist: PropTypes.array.isRequired,\r\n  addBook: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}