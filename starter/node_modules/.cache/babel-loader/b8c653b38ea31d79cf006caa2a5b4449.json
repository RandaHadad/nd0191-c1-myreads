{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\EachBook.jsx\";\nimport React from \"react\";\nimport DropDown from \"./DropDown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EachBook({\n  book,\n  value,\n  addBook\n}) {\n  const handleSelectChange = e => {\n    //get localStorage arr\n    const currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\n    const wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\n    const read = JSON.parse(localStorage.getItem(\"read\"));\n\n    if (e.target.value !== \"none\") {\n      const CurrentlyUpdating = JSON.parse(localStorage.getItem(e.target.value)); //To prevent Duplication\n\n      let finalArray = CurrentlyUpdating.filter(element => element.id !== book.id); //Checking if the book is in another Shelf and delete it\n\n      addingToAnotherShelf(e, currentlyReading, wantToRead, read); //adding the book to the array\n\n      finalArray.push(book);\n      localStorage.setItem(e.target.value, JSON.stringify(finalArray)); //To setSate in HomeScreen\n\n      addBook && addBook(e.target.value, finalArray);\n    }\n  };\n\n  const addingToAnotherShelf = (e, currentlyReading, wantToRead, read) => {\n    switch (e.target.value) {\n      case \"currentlyReading\":\n        // if the shelf is in wantToRead\n        RemoveBookFromSheilf(wantToRead, \"wantToRead\"); // if the shelf is in Read\n\n        RemoveBookFromSheilf(read, \"read\");\n        break;\n\n      case \"wantToRead\":\n        // if the shelf is in currentlyReading\n        RemoveBookFromSheilf(currentlyReading, \"currentlyReading\"); // if the shelf is in Read\n\n        RemoveBookFromSheilf(read, \"read\");\n        break;\n\n      case \"read\":\n        // if the shelf is in currentlyReading\n        RemoveBookFromSheilf(currentlyReading, \"currentlyReading\"); // if the shelf is in WantToRead\n\n        RemoveBookFromSheilf(wantToRead, \"wantToRead\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const RemoveBookFromSheilf = (Bookarray, categoryOfBook) => {\n    let switchedIndex = Bookarray.findIndex(e => e.id === book.id);\n\n    if (switchedIndex > -1) {\n      Bookarray.splice(switchedIndex, 1);\n      localStorage.setItem(categoryOfBook, JSON.stringify(Bookarray));\n      addBook && addBook(categoryOfBook, Bookarray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${book.imageLinks.thumbnail})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          value: value,\n          handleSelectChange: handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), book.authors.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-authors\",\n          children: val\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = EachBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachBook\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/EachBook.jsx"],"names":["React","DropDown","EachBook","book","value","addBook","handleSelectChange","e","currentlyReading","JSON","parse","localStorage","getItem","wantToRead","read","target","CurrentlyUpdating","finalArray","filter","element","id","addingToAnotherShelf","push","setItem","stringify","RemoveBookFromSheilf","Bookarray","categoryOfBook","switchedIndex","findIndex","splice","width","height","backgroundImage","imageLinks","thumbnail","title","authors","map","val","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DropDown from \"./DropDown\";\r\n\r\nexport default function EachBook({ book, value, addBook }) {\r\n  const handleSelectChange = (e) => {\r\n    //get localStorage arr\r\n    const currentlyReading = JSON.parse(\r\n      localStorage.getItem(\"currentlyReading\")\r\n    );\r\n    const wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\r\n    const read = JSON.parse(localStorage.getItem(\"read\"));\r\n\r\n    if (e.target.value !== \"none\") {\r\n      const CurrentlyUpdating = JSON.parse(\r\n        localStorage.getItem(e.target.value)\r\n      );\r\n\r\n      //To prevent Duplication\r\n      let finalArray = CurrentlyUpdating.filter(\r\n        (element) => element.id !== book.id\r\n      );\r\n\r\n      //Checking if the book is in another Shelf and delete it\r\n      addingToAnotherShelf(e, currentlyReading, wantToRead, read);\r\n\r\n      //adding the book to the array\r\n      finalArray.push(book);\r\n      localStorage.setItem(e.target.value, JSON.stringify(finalArray));\r\n\r\n      //To setSate in HomeScreen\r\n      addBook && addBook(e.target.value, finalArray);\r\n    }\r\n  };\r\n\r\n  const addingToAnotherShelf = (e, currentlyReading, wantToRead, read) => {\r\n    switch (e.target.value) {\r\n      case \"currentlyReading\":\r\n        // if the shelf is in wantToRead\r\n        RemoveBookFromSheilf(wantToRead, \"wantToRead\");\r\n        // if the shelf is in Read\r\n        RemoveBookFromSheilf(read, \"read\");\r\n        break;\r\n      case \"wantToRead\":\r\n        // if the shelf is in currentlyReading\r\n        RemoveBookFromSheilf(currentlyReading, \"currentlyReading\");\r\n        // if the shelf is in Read\r\n        RemoveBookFromSheilf(read, \"read\");\r\n        break;\r\n      case \"read\":\r\n        // if the shelf is in currentlyReading\r\n        RemoveBookFromSheilf(currentlyReading, \"currentlyReading\");\r\n        // if the shelf is in WantToRead\r\n        RemoveBookFromSheilf(wantToRead, \"wantToRead\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const RemoveBookFromSheilf = (Bookarray, categoryOfBook) => {\r\n    let switchedIndex = Bookarray.findIndex((e) => e.id === book.id);\r\n    if (switchedIndex > -1) {\r\n      Bookarray.splice(switchedIndex, 1);\r\n      localStorage.setItem(categoryOfBook, JSON.stringify(Bookarray));\r\n      addBook && addBook(categoryOfBook, Bookarray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className='book'>\r\n        <div className='book-top'>\r\n          <div\r\n            className='book-cover'\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n            }}></div>\r\n          <DropDown value={value} handleSelectChange={handleSelectChange} />\r\n        </div>\r\n        <div className='book-title'>{book.title}</div>\r\n        {book.authors.map((val, i) => {\r\n          return (\r\n            <div key={i} className='book-authors'>\r\n              {val}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}