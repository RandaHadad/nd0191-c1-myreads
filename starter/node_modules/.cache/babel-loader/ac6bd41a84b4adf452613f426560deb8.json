{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\BookList.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EachBook from \"./EachBook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookList({\n  booklist,\n  addBook\n}) {\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\n  let read = JSON.parse(localStorage.getItem(\"read\"));\n  return booklist == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this) : booklist.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12 empty-cart-cls text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://i.imgur.com/dCdflKN.png\",\n            width: \"130\",\n            height: \"130\",\n            className: \"img-fluid mb-4 mr-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"No Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Add something to make me happy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            className: \"btn btn-primary cart-btn-transform m-3\",\n            \"data-abc\": \"true\",\n            children: \"Back To My Shelf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: booklist.map(book => {\n      if (currentlyReading.findIndex(e => e.id === book.id) > -1) {\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          bookshelf: \"currentlyReading\",\n          addBook: addBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      } else if (wantToRead.findIndex(e => e.id === book.id) > -1) {\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          bookshelf: \"wantToRead\",\n          addBook: addBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      } else if (read.findIndex(e => e.id === book.id) > -1) {\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          bookshelf: \"read\",\n          addBook: addBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(EachBook, {\n          book: book,\n          addBook: addBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = BookList;\nBookList.propTypes = {\n  booklist: PropTypes.array.isRequired,\n  addBook: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/BookList.jsx"],"names":["React","PropTypes","EachBook","BookList","booklist","addBook","currentlyReading","JSON","parse","localStorage","getItem","wantToRead","read","length","map","book","findIndex","e","id","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport EachBook from \"./EachBook\";\r\n\r\nexport default function BookList({ booklist, addBook }) {\r\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\r\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\r\n  let read = JSON.parse(localStorage.getItem(\"read\"));\r\n\r\n  return booklist == null ? (\r\n    <div className='d-flex justify-content-center'>\r\n      <div className='spinner-border' role='status'>\r\n        <span className='sr-only'></span>\r\n      </div>\r\n    </div>\r\n  ) : booklist.length == 0 ? (\r\n    <div className='container-fluid d-flex justify-content-center'>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <div className='col-sm-12 empty-cart-cls text-center'>\r\n            <img\r\n              src='https://i.imgur.com/dCdflKN.png'\r\n              width='130'\r\n              height='130'\r\n              className='img-fluid mb-4 mr-3'\r\n            />\r\n            <h3>\r\n              <strong>No Item</strong>\r\n            </h3>\r\n            <h4>Add something to make me happy</h4>\r\n            <a\r\n              href='/'\r\n              className='btn btn-primary cart-btn-transform m-3'\r\n              data-abc='true'>\r\n              Back To My Shelf\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <ol className='books-grid'>\r\n      {booklist.map((book) => {\r\n        if (currentlyReading.findIndex((e) => e.id === book.id) > -1) {\r\n          return (\r\n            <EachBook\r\n              key={book.id}\r\n              book={book}\r\n              bookshelf='currentlyReading'\r\n              addBook={addBook}\r\n            />\r\n          );\r\n        } else if (wantToRead.findIndex((e) => e.id === book.id) > -1) {\r\n          return (\r\n            <EachBook\r\n              key={book.id}\r\n              book={book}\r\n              bookshelf='wantToRead'\r\n              addBook={addBook}\r\n            />\r\n          );\r\n        } else if (read.findIndex((e) => e.id === book.id) > -1) {\r\n          return (\r\n            <EachBook\r\n              key={book.id}\r\n              book={book}\r\n              bookshelf='read'\r\n              addBook={addBook}\r\n            />\r\n          );\r\n        } else {\r\n          return <EachBook key={book.id} book={book} addBook={addBook} />;\r\n        }\r\n      })}\r\n    </ol>\r\n  );\r\n}\r\nBookList.propTypes = {\r\n  booklist: PropTypes.array.isRequired,\r\n  addBook: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}