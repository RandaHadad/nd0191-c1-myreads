{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\EachBook.jsx\";\nimport React from \"react\";\nimport DropDown from \"./DropDown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EachBook({\n  book,\n  bookshelf,\n  addBook\n}) {\n  const handleSelectChange = e => {\n    if (bookshelf) {\n      // if the user choose the same bookshelf\n      if (bookshelf == e.target.value) return; //get the book current shelf and remove it\n\n      const currentlyBookShelf = JSON.parse(localStorage.getItem(bookshelf));\n      RemoveBookFromSheilf(bookshelf);\n    } ////////////// after removing the book from other shelf////////\n    //adding the book to the new  shelf\n\n\n    if (e.target.value !== \"none\") {\n      const updatingBookSelf = JSON.parse(localStorage.getItem(e.target.value)); //adding the book to the array\n\n      updatingBookSelf.push(book);\n      localStorage.setItem(e.target.value, JSON.stringify(updatingBookSelf)); //To setSate in HomeScreen\n\n      addBook && addBook(e.target.value, updatingBookSelf);\n    }\n  };\n\n  const RemoveBookFromSheilf = categoryOfBook => {\n    const Bookarray = JSON.parse(localStorage.getItem(categoryOfBook));\n    let switchedIndex = Bookarray.findIndex(e => e.id === book.id);\n\n    if (switchedIndex > -1) {\n      Bookarray.splice(switchedIndex, 1);\n      localStorage.setItem(categoryOfBook, JSON.stringify(Bookarray));\n      addBook && addBook(categoryOfBook, Bookarray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${book.imageLinks.thumbnail})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          value: bookshelf,\n          handleSelectChange: handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), book.authors.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-authors\",\n          children: val\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = EachBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachBook\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/EachBook.jsx"],"names":["React","DropDown","EachBook","book","bookshelf","addBook","handleSelectChange","e","target","value","currentlyBookShelf","JSON","parse","localStorage","getItem","RemoveBookFromSheilf","updatingBookSelf","push","setItem","stringify","categoryOfBook","Bookarray","switchedIndex","findIndex","id","splice","width","height","backgroundImage","imageLinks","thumbnail","title","authors","map","val","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DropDown from \"./DropDown\";\r\n\r\nexport default function EachBook({ book,bookshelf, addBook }) {\r\n  const handleSelectChange = (e) => {\r\n    if (bookshelf) {\r\n      // if the user choose the same bookshelf\r\n      if (bookshelf == e.target.value) return;\r\n\r\n      //get the book current shelf and remove it\r\n      const currentlyBookShelf = JSON.parse(localStorage.getItem(bookshelf));\r\n      RemoveBookFromSheilf(bookshelf);\r\n    }\r\n\r\n    ////////////// after removing the book from other shelf////////\r\n    //adding the book to the new  shelf\r\n    if (e.target.value !== \"none\") {\r\n      const updatingBookSelf = JSON.parse(localStorage.getItem(e.target.value));\r\n\r\n      //adding the book to the array\r\n      updatingBookSelf.push(book);\r\n      localStorage.setItem(e.target.value, JSON.stringify(updatingBookSelf));\r\n\r\n      //To setSate in HomeScreen\r\n      addBook && addBook(e.target.value, updatingBookSelf);\r\n    }\r\n  };\r\n\r\n  const RemoveBookFromSheilf = (categoryOfBook) => {\r\n    const Bookarray = JSON.parse(localStorage.getItem(categoryOfBook));\r\n    let switchedIndex = Bookarray.findIndex((e) => e.id === book.id);\r\n    if (switchedIndex > -1) {\r\n      Bookarray.splice(switchedIndex, 1);\r\n      localStorage.setItem(categoryOfBook, JSON.stringify(Bookarray));\r\n      addBook && addBook(categoryOfBook, Bookarray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className='book'>\r\n        <div className='book-top'>\r\n          <div\r\n            className='book-cover'\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n            }}></div>\r\n          <DropDown value={bookshelf} handleSelectChange={handleSelectChange} />\r\n        </div>\r\n        <div className='book-title'>{book.title}</div>\r\n        {book.authors.map((val, i) => {\r\n          return (\r\n            <div key={i} className='book-authors'>\r\n              {val}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}