{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\EachBook.jsx\";\nimport React from \"react\";\nimport DropDown from \"./DropDown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EachBook({\n  book,\n  value,\n  addBook\n}) {\n  const handleSelectChange = e => {\n    //get localStorage arr\n    const currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\n    const wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\n    const read = JSON.parse(localStorage.getItem(\"read\"));\n    if (e.target.value == \"none\") return;\n    const CurrentlyUpdating = JSON.parse(localStorage.getItem(e.target.value)); //To prevent Duplication\n\n    let finalArray = CurrentlyUpdating.filter(element => element.id !== book.id); //Checking if the element is in another Self\n\n    addingToAnotherSelf(e, currentlyReading, wantToRead, read); //adding the book to the array\n\n    finalArray.push(book);\n    localStorage.setItem(e.target.value, JSON.stringify(finalArray)); //To setSate in HomeScreen\n\n    addBook && addBook(e.target.value, finalArray);\n  };\n\n  const addingToAnotherSelf = (e, currentlyReading, wantToRead, read) => {\n    let SwitchFromWantToRead;\n    let SwitchFromread;\n    let SwitchFromCurrentlyReading;\n    console.log(e.target.value);\n\n    switch (e.target.value) {\n      case \"currentlyReading\":\n        // if the shelf is in wantToRead\n        SwitchFromWantToRead = wantToRead.findIndex(e => e.id === book.id);\n\n        if (SwitchFromWantToRead > -1) {\n          wantToRead.splice(SwitchFromWantToRead, 1);\n          localStorage.setItem(\"wantToRead\", JSON.stringify(wantToRead));\n          addBook && addBook(\"wantToRead\", wantToRead);\n        } // if the shelf is in Read\n\n\n        SwitchFromread = read.findIndex(e => e.id === book.id);\n\n        if (SwitchFromread > -1) {\n          read.splice(SwitchFromread, 1);\n          localStorage.setItem(\"read\", JSON.stringify(read));\n          addBook && addBook(\"read\", read);\n        }\n\n        break;\n\n      case \"wantToRead\":\n        // if the shelf is in currentlyReading\n        SwitchFromCurrentlyReading = currentlyReading.findIndex(e => e.id === book.id);\n\n        if (SwitchFromCurrentlyReading > -1) {\n          //delete the book from old self\n          currentlyReading.splice(SwitchFromCurrentlyReading, 1); //update Local Storage and Screen\n\n          localStorage.setItem(\"currentlyReading\", JSON.stringify(wantToRead));\n          addBook && addBook(\"currentlyReading\", currentlyReading);\n        }\n\n        SwitchFromread = read.findIndex(e => e.id === book.id);\n\n        if (SwitchFromread > -1) {\n          //delete the book from old self\n          read.splice(SwitchFromread, 1); //update Local Storage and Screen\n\n          localStorage.setItem(\"read\", JSON.stringify(read));\n          addBook && addBook(\"read\", read);\n        }\n\n        break;\n\n      case \"read\":\n        // if the shelf is in currentlyReading\n        SwitchFromCurrentlyReading = currentlyReading.findIndex(e => e.id === book.id);\n\n        if (SwitchFromCurrentlyReading > -1) {\n          //delete the book from old self\n          currentlyReading.splice(SwitchFromCurrentlyReading, 1); //update Local Storage and Screen\n\n          localStorage.setItem(\"currentlyReading\", JSON.stringify(wantToRead));\n          addBook && addBook(\"currentlyReading\", currentlyReading);\n        } // if the shelf is in WantToRead\n\n\n        SwitchFromWantToRead = wantToRead.findIndex(e => e.id === book.id);\n\n        if (SwitchFromWantToRead > -1) {\n          wantToRead.splice(SwitchFromWantToRead, 1);\n          localStorage.setItem(\"wantToRead\", JSON.stringify(wantToRead));\n          addBook && addBook(\"wantToRead\", wantToRead);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${book.imageLinks.thumbnail})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          value: value,\n          handleSelectChange: handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), book.authors.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-authors\",\n          children: val\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_c = EachBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachBook\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/EachBook.jsx"],"names":["React","DropDown","EachBook","book","value","addBook","handleSelectChange","e","currentlyReading","JSON","parse","localStorage","getItem","wantToRead","read","target","CurrentlyUpdating","finalArray","filter","element","id","addingToAnotherSelf","push","setItem","stringify","SwitchFromWantToRead","SwitchFromread","SwitchFromCurrentlyReading","console","log","findIndex","splice","width","height","backgroundImage","imageLinks","thumbnail","title","authors","map","val","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DropDown from \"./DropDown\";\r\n\r\nexport default function EachBook({ book, value, addBook }) {\r\n  const handleSelectChange = (e) => {\r\n    //get localStorage arr\r\n    const currentlyReading = JSON.parse(\r\n      localStorage.getItem(\"currentlyReading\")\r\n    );\r\n    const wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\r\n    const read = JSON.parse(localStorage.getItem(\"read\"));\r\n\r\n    if (e.target.value == \"none\") return;\r\n    const CurrentlyUpdating = JSON.parse(localStorage.getItem(e.target.value));\r\n\r\n    //To prevent Duplication\r\n    let finalArray = CurrentlyUpdating.filter(\r\n      (element) => element.id !== book.id\r\n    );\r\n\r\n    //Checking if the element is in another Self\r\n    addingToAnotherSelf(e, currentlyReading, wantToRead, read);\r\n\r\n    //adding the book to the array\r\n    finalArray.push(book);\r\n    localStorage.setItem(e.target.value, JSON.stringify(finalArray));\r\n    //To setSate in HomeScreen\r\n    addBook && addBook(e.target.value, finalArray);\r\n  };\r\n\r\n  const addingToAnotherSelf = (e, currentlyReading, wantToRead, read) => {\r\n    let SwitchFromWantToRead;\r\n    let SwitchFromread;\r\n    let SwitchFromCurrentlyReading;\r\n    console.log(e.target.value);\r\n    switch (e.target.value) {\r\n      case \"currentlyReading\":\r\n        // if the shelf is in wantToRead\r\n        SwitchFromWantToRead = wantToRead.findIndex((e) => e.id === book.id);\r\n        if (SwitchFromWantToRead > -1) {\r\n          wantToRead.splice(SwitchFromWantToRead, 1);\r\n          localStorage.setItem(\"wantToRead\", JSON.stringify(wantToRead));\r\n          addBook && addBook(\"wantToRead\", wantToRead);\r\n        }\r\n\r\n        // if the shelf is in Read\r\n        SwitchFromread = read.findIndex((e) => e.id === book.id);\r\n        if (SwitchFromread > -1) {\r\n          read.splice(SwitchFromread, 1);\r\n          localStorage.setItem(\"read\", JSON.stringify(read));\r\n          addBook && addBook(\"read\", read);\r\n        }\r\n        break;\r\n      case \"wantToRead\":\r\n        // if the shelf is in currentlyReading\r\n        SwitchFromCurrentlyReading = currentlyReading.findIndex(\r\n          (e) => e.id === book.id\r\n        );\r\n        if (SwitchFromCurrentlyReading > -1) {\r\n          //delete the book from old self\r\n          currentlyReading.splice(SwitchFromCurrentlyReading, 1);\r\n          //update Local Storage and Screen\r\n          localStorage.setItem(\"currentlyReading\", JSON.stringify(wantToRead));\r\n          addBook && addBook(\"currentlyReading\", currentlyReading);\r\n        }\r\n\r\n        SwitchFromread = read.findIndex((e) => e.id === book.id);\r\n        if (SwitchFromread > -1) {\r\n          //delete the book from old self\r\n          read.splice(SwitchFromread, 1);\r\n          //update Local Storage and Screen\r\n          localStorage.setItem(\"read\", JSON.stringify(read));\r\n          addBook && addBook(\"read\", read);\r\n        }\r\n        break;\r\n      case \"read\":\r\n        // if the shelf is in currentlyReading\r\n        SwitchFromCurrentlyReading = currentlyReading.findIndex(\r\n          (e) => e.id === book.id\r\n        );\r\n\r\n        if (SwitchFromCurrentlyReading > -1) {\r\n          //delete the book from old self\r\n          currentlyReading.splice(SwitchFromCurrentlyReading, 1);\r\n          //update Local Storage and Screen\r\n          localStorage.setItem(\"currentlyReading\", JSON.stringify(wantToRead));\r\n          addBook && addBook(\"currentlyReading\", currentlyReading);\r\n        }\r\n        // if the shelf is in WantToRead\r\n        SwitchFromWantToRead = wantToRead.findIndex((e) => e.id === book.id);\r\n        if (SwitchFromWantToRead > -1) {\r\n          wantToRead.splice(SwitchFromWantToRead, 1);\r\n          localStorage.setItem(\"wantToRead\", JSON.stringify(wantToRead));\r\n          addBook && addBook(\"wantToRead\", wantToRead);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className='book'>\r\n        <div className='book-top'>\r\n          <div\r\n            className='book-cover'\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n            }}></div>\r\n          <DropDown value={value} handleSelectChange={handleSelectChange} />\r\n        </div>\r\n        <div className='book-title'>{book.title}</div>\r\n        {book.authors.map((val, i) => {\r\n          return (\r\n            <div key={i} className='book-authors'>\r\n              {val}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}