{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\BookList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport EachBook from \"./EachBook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookList({\n  booklist,\n  value,\n  addBook\n}) {\n  _s();\n\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\n  let read = JSON.parse(localStorage.getItem(\"read\"));\n  let book;\n\n  const getNoneBookCategory = () => {};\n\n  React.useEffect(() => {\n    for (let i = 0; i < currentlyReading.lenght; i++) {\n      book = booklist.filter(e => e.id !== currentlyReading[i].id);\n    }\n  });\n  return !booklist ? /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"spinner-border\",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"sr-only\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: book.map(book => {\n      return /*#__PURE__*/_jsxDEV(EachBook, {\n        book: book,\n        value: \"currentlyReading\",\n        addBook: addBook\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/BookList.jsx"],"names":["React","EachBook","BookList","booklist","value","addBook","currentlyReading","JSON","parse","localStorage","getItem","wantToRead","read","book","getNoneBookCategory","useEffect","i","lenght","filter","e","id","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAlB,EAAgD;AAAA;;AAC7D,MAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAAvB;AACA,MAAIC,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;AACA,MAAIE,IAAI,GAAGL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,MAAIG,IAAJ;;AAEA,QAAMC,mBAAmB,GAAG,MAAM,CAEjC,CAFD;;AAGAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAEtB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,gBAAgB,CAACW,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9CH,MAAAA,IAAI,GAAGV,QAAQ,CAACe,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASd,gBAAgB,CAACU,CAAD,CAAhB,CAAoBI,EAApD,CAAP;AACD;AACF,GALD;AAMA,SAAO,CAACjB,QAAD,gBACL;AAAK,IAAA,KAAK,EAAC,gBAAX;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA,2BACE;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACGU,IAAI,CAACQ,GAAL,CAAUR,IAAD,IAAU;AAClB,0BACE,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,KAAK,EAAC,kBAHR;AAIE,QAAA,OAAO,EAAER;AAJX,SACOQ,IAAI,CAACO,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UALF;AAkBD;;GAjCuBlB,Q;;KAAAA,Q","sourcesContent":["import React from \"react\";\r\nimport EachBook from \"./EachBook\";\r\n\r\nexport default function BookList({ booklist, value, addBook }) {\r\n  let currentlyReading = JSON.parse(localStorage.getItem(\"currentlyReading\"));\r\n  let wantToRead = JSON.parse(localStorage.getItem(\"wantToRead\"));\r\n  let read = JSON.parse(localStorage.getItem(\"read\"));\r\n  let book;\r\n\r\n  const getNoneBookCategory = () => {\r\n   \r\n  };\r\n  React.useEffect(() => {\r\n\r\n  for (let i = 0; i < currentlyReading.lenght; i++) {\r\n      book = booklist.filter((e) => e.id !== currentlyReading[i].id);\r\n    }\r\n  });\r\n  return !booklist ? (\r\n    <div class='spinner-border' role='status'>\r\n      <span class='sr-only'>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <ol className='books-grid'>\r\n      {book.map((book) => {\r\n        return (\r\n          <EachBook\r\n            key={book.id}\r\n            book={book}\r\n            value='currentlyReading'\r\n            addBook={addBook}\r\n          />\r\n        );\r\n      })}\r\n    </ol>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}