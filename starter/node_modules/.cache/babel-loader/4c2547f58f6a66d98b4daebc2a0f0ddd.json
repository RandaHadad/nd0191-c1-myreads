{"ast":null,"code":"var _jsxFileName = \"D:\\\\randa\\\\FWD\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\Component\\\\EachBook.jsx\";\nimport React from \"react\";\nimport DropDown from \"./DropDown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EachBook({\n  book,\n  value: bookshelf,\n  addBook\n}) {\n  const handleSelectChange = e => {\n    if (bookshelf) {\n      // if the user choose the same bookshelf\n      if (bookshelf == e.target.value) return; //get the book current shelf and remove it\n\n      const currentlyBookShelf = JSON.parse(localStorage.getItem(bookshelf));\n      RemoveBookFromSheilf(currentlyBookShelf, bookshelf);\n    } ////////////// after removing the book from other shelf////////\n    //adding the book to the new  shelf \n\n\n    if (e.target.value !== \"none\") {\n      const updatingBookSelf = JSON.parse(localStorage.getItem(e.target.value)); //To prevent Duplication\n\n      let finalArray = updatingBookSelf.filter(element => element.id !== book.id); //adding the book to the array\n\n      updatingBookSelf.push(book);\n      localStorage.setItem(e.target.value, JSON.stringify(updatingBookSelf)); //To setSate in HomeScreen\n\n      addBook && addBook(e.target.value, updatingBookSelf);\n    }\n  };\n\n  const RemoveBookFromSheilf = (Bookarray, categoryOfBook) => {\n    let switchedIndex = Bookarray.findIndex(e => e.id === book.id);\n\n    if (switchedIndex > -1) {\n      Bookarray.splice(switchedIndex, 1);\n      localStorage.setItem(categoryOfBook, JSON.stringify(Bookarray));\n      addBook && addBook(categoryOfBook, Bookarray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${book.imageLinks.thumbnail})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          value: bookshelf,\n          handleSelectChange: handleSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), book.authors.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-authors\",\n          children: val\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = EachBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachBook\");","map":{"version":3,"sources":["D:/randa/FWD/nd0191-c1-myreads-1/starter/src/Component/EachBook.jsx"],"names":["React","DropDown","EachBook","book","value","bookshelf","addBook","handleSelectChange","e","target","currentlyBookShelf","JSON","parse","localStorage","getItem","RemoveBookFromSheilf","updatingBookSelf","finalArray","filter","element","id","push","setItem","stringify","Bookarray","categoryOfBook","switchedIndex","findIndex","splice","width","height","backgroundImage","imageLinks","thumbnail","title","authors","map","val","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DropDown from \"./DropDown\";\r\n\r\nexport default function EachBook({ book, value: bookshelf, addBook }) {\r\n  const handleSelectChange = (e) => {\r\n    \r\n    if (bookshelf) {\r\n      // if the user choose the same bookshelf\r\n      if (bookshelf == e.target.value) return;\r\n\r\n      //get the book current shelf and remove it\r\n      const currentlyBookShelf = JSON.parse(localStorage.getItem(bookshelf));\r\n      RemoveBookFromSheilf(currentlyBookShelf, bookshelf);\r\n    }\r\n\r\n    ////////////// after removing the book from other shelf////////\r\n    //adding the book to the new  shelf \r\n    if (e.target.value !== \"none\") {\r\n      const updatingBookSelf = JSON.parse(localStorage.getItem(e.target.value));\r\n\r\n      //To prevent Duplication\r\n      let finalArray = updatingBookSelf.filter(\r\n        (element) => element.id !== book.id\r\n      );\r\n\r\n      //adding the book to the array\r\n      updatingBookSelf.push(book);\r\n      localStorage.setItem(e.target.value, JSON.stringify(updatingBookSelf));\r\n\r\n      //To setSate in HomeScreen\r\n      addBook && addBook(e.target.value, updatingBookSelf);\r\n    }\r\n  };\r\n\r\n  const RemoveBookFromSheilf = (Bookarray, categoryOfBook) => {\r\n    let switchedIndex = Bookarray.findIndex((e) => e.id === book.id);\r\n    if (switchedIndex > -1) {\r\n      Bookarray.splice(switchedIndex, 1);\r\n      localStorage.setItem(categoryOfBook, JSON.stringify(Bookarray));\r\n      addBook && addBook(categoryOfBook, Bookarray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className='book'>\r\n        <div className='book-top'>\r\n          <div\r\n            className='book-cover'\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n            }}></div>\r\n          <DropDown value={bookshelf} handleSelectChange={handleSelectChange} />\r\n        </div>\r\n        <div className='book-title'>{book.title}</div>\r\n        {book.authors.map((val, i) => {\r\n          return (\r\n            <div key={i} className='book-authors'>\r\n              {val}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}